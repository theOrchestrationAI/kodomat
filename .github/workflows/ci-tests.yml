name: CI Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          web/package-lock.json
          functions/package-lock.json
    
    - name: Install web dependencies
      working-directory: web
      run: npm ci
      
    - name: Run web tests
      working-directory: web
      run: npm test -- --passWithNoTests
      
    - name: Install functions dependencies
      working-directory: functions
      run: npm ci
      
    - name: Run functions tests
      working-directory: functions
      run: npm test -- --passWithNoTests

  python-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: api/requirements.txt
        
    - name: Install dependencies
      working-directory: api
      run: pip install -r requirements.txt
      
    - name: Run tests with coverage
      working-directory: api
      run: |
        pip install pytest pytest-cov
        pytest --cov=app --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./api/coverage.xml
        flags: unittests

  api-docker-build:
    runs-on: ubuntu-latest
    needs: [python-tests]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build API Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./api
        push: false
        tags: slavkokernel-api:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

  preview-deploy:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [unit-tests, python-tests]
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install web dependencies
      working-directory: web
      run: npm ci
      
    - name: Build web
      working-directory: web
      run: npm run build && npm run export
      
    - name: Deploy to Firebase Preview Channel
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
        expires: 7d